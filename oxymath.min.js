!function(){window.Oxymath=Oxymath;var config={safe_mode:true};function Oxymath(){}function _Oxymath(){}var error=_Oxymath.prototype.error=function(message){for(var i=1;i<arguments.length;i++){console.log(arguments[i])}alert(message);return false};_Oxymath.prototype.overload=function(name,fn){var oldImplementation=this[name];this[name]=function(){if(fn.length===arguments.length){return fn.apply(this,arguments)}else if(typeof oldImplementation==="function")return oldImplementation.apply(this,arguments)}};var do_init=false;_Oxymath.subClass=function _subClass(child){parent=this.prototype;do_init=false;var prototype=new this;do_init=true;for(var member in child){prototype[member]=typeof child[member]==="function"&&typeof parent[member]==="function"?function(member){return function(){var old=this.parent;this.parent=parent[member];var result=child[member].apply(this,arguments);this.parent=old;return result}}(member):child[member]}function Obj(){this._private={};if(do_init&&this.init){this.init.apply(this,arguments)}}Obj.prototype=prototype;Obj.subClass=_subClass;return Obj};var Matrix=Oxymath.Matrix=_Oxymath.subClass({init:function(){if(!this._private._initialized){this.size={m:0,n:0};var storage=this._private._storage=storage=storage?storage:[];this.overload("init",function(arr){if(arr instanceof Matrix){this.init(arr.size.m,arr.size.n);this.forEach(function(val,m,n){return arr.get(m,n)});return}if(!(arr instanceof Array)||!arr.length||!(arr[0]instanceof Array)||!arr[0].length)return this.error("Matrix initialization error: Array of Arrays expected",arr);for(var i=0;i<arr.length;i++){if(!(arr[i]instanceof Array)||arr[i].length!==arr[0].length)return error("Matrix initialization error: Rows have different sizes");storage.push(arr[i])}this.size.m=arr.length;this.size.n=arr[0].length});this.overload("init",function(m,n,init_value){if(m>0&&n>0){this.size.m=m;this.size.n=n;for(var i=0;i<m;i++){var row=new Array(n);for(var k=0;k<n;k++)row[k]=init_value?init_value:0;storage.push(row)}}else return error("Matrix initialization error: Wrong matrix size",m,n)});this.overload("init",function(m,n){this.init(m,n,0)});this._private._initialized=true;this.init.apply(this,arguments)}},forEach:function(fn){for(var m=0;m<this.size.m;m++)for(var n=0;n<this.size.n;n++)this._private._storage[m][n]=fn.call(this,this._private._storage[m][n],m+1,n+1);return this},get:function(index_m,index_n){return this._private._storage[index_m-1][index_n-1]},minus:function(B){var A=this;var C=new Matrix(A);return C.unsafeMinus(B)},plus:function(B){var A=this;var C=new Matrix(A);return C.unsafePlus(B)},isSameSize:function(matrix){if(matrix instanceof Matrix)return this.size.m===matrix.size.m&&this.size.n===matrix.size.m;else return false},set:function(index_m,index_n,value){this._private._storage[index_m][index_n]=value},times:function(multiplier){var A=this;if(typeof multiplier==="number")return new Matrix(this.size.m,this.size.n).forEach(function(value,m,n){return multiplier*A.get(m,n)});if(multiplier instanceof Matrix){return naiveMatrixMultiplication(A,multiplier)}return this.error("Matrix multiplication error")},transpose:function(){var A=this;return new Matrix(this.size.n,this.size.m).forEach(function(value,m,n){return A.get(n,m)})},unsafeMinus:function(B){var A=this;if(!this.isSameSize(B)){return this.error("Matrix subtraction error: Matrices have different size")}return A.forEach(function(val,m,n){return val-B.get(m,n)});return A},unsafePlus:function(B){var A=this;if(!this.isSameSize(B)){return this.error("Matrix addition error: Matrices have different size")}return A.forEach(function(val,m,n){return val+B.get(m,n)});return A}});var Identity=Oxymath.Identity=Matrix.subClass({init:function(m){if(!this._private._initialized){if(m>0){this.parent(m,m);this.forEach(function(val,m,n){return m===n?1:0})}else this.error("Error initializing identity matrix",m)}}});var Vector=Oxymath.Vector=Matrix.subClass({init:function(vector){if(!this._private._initialized){if(typeof vector==="number"&&vector){this.parent(vector,1);return}if(vector instanceof Array&&vector.length){this.parent(vector.length,1);this.forEach(function(val,m){return vector[m-1]});return}if(vector instanceof Vector){this.parent(vector);return}return this.error("Vector initialization error: Array or Integer or Vector expected",vector)}},dotProduct:function(B){var A=this;if(!A.isSameSize(B))return this.error("Vector dot product error: Vectors have different size");var product=0;for(var m=1;m<=A.length();m++)product+=A.get(m)*B.get(m);return product},get:function(index_m){return this.parent(index_m,1)},isSameSize:function(vector){if(vector instanceof Vector)return this.length()===vector.length();else return false},length:function(){return this.size.m},minus:function(B){var A=this;var C=new Vector(A);return C.unsafeMinus(B)},plus:function(B){var A=this;var C=new Vector(A);return C.unsafePlus(B)},set:function(index_m,value){return this.parent(index_m,1,value)}});function naiveMatrixMultiplication(A,B){if(!(A instanceof Matrix)||!(B instanceof Matrix))error("Only matrices can be multiplied");if(A.size.n!==B.size.m)error("Multiplication error: Matrices size mismatch");return new Matrix(A.size.m,B.size.n).forEach(function(value,m,n){var sum=0;for(var i=1;i<=A.size.n;i++)sum+=A.get(m,i)*B.get(i,n);return sum})}}();